[{"/home/hemant/Desktop/STL_Frontend/my-app/src/index.js":"1","/home/hemant/Desktop/STL_Frontend/my-app/src/App.js":"2","/home/hemant/Desktop/STL_Frontend/my-app/src/reportWebVitals.js":"3","/home/hemant/Desktop/STL_Frontend/my-app/src/components/IndiaMap.jsx":"4","/home/hemant/Desktop/STL_Frontend/my-app/src/components/map.jsx":"5","/home/hemant/Desktop/STL_Frontend/my-app/src/components/Pie.jsx":"6","/home/hemant/Desktop/STL_Frontend/my-app/src/components/LinearGradient.jsx":"7","/home/hemant/Desktop/STL_Frontend/my-app/src/components/donut.jsx":"8","/home/hemant/Desktop/STL_Frontend/my-app/src/components/table.jsx":"9"},{"size":500,"mtime":1607267740171,"results":"10","hashOfConfig":"11"},{"size":241,"mtime":1607608140321,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607267740171,"results":"13","hashOfConfig":"11"},{"size":6575,"mtime":1607608241008,"results":"14","hashOfConfig":"11"},{"size":7676,"mtime":1607608408012,"results":"15","hashOfConfig":"11"},{"size":5016,"mtime":1607592996017,"results":"16","hashOfConfig":"11"},{"size":722,"mtime":1607608420435,"results":"17","hashOfConfig":"11"},{"size":2546,"mtime":1607538876298,"results":"18","hashOfConfig":"11"},{"size":5333,"mtime":1607584584960,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ohlmn0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/home/hemant/Desktop/STL_Frontend/my-app/src/index.js",[],["42","43"],"/home/hemant/Desktop/STL_Frontend/my-app/src/App.js",["44"],"/home/hemant/Desktop/STL_Frontend/my-app/src/reportWebVitals.js",[],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/IndiaMap.jsx",["45","46","47","48"],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/map.jsx",["49"],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/Pie.jsx",["50","51","52","53"],"import React, { useState } from 'react';\nimport {PieChart, Pie, Sector, ResponsiveContainer, Cell, BarChart, Bar,XAxis, YAxis, CartesianGrid, Tooltip, Legend,} from 'recharts';\nimport {AppBar, Tabs, Tab} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nconst COLORS1 = ['#5893d8', '#53bbc9', '#5fd4a8', '#8ee677', '#dcf483', '#eedc9b', '#0d47a1', '#90caf9'];\nconst renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value,name } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius+15}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 21}\n        outerRadius={outerRadius + 25}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\" style={{fontSize:12}}>{`Capacity ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#666\">\n        {`Lab ${name}`}\n      </text>\n    </g>\n  );\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <>\n          {children}\n        </>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\n\nfunction LabChart(props){\n    const theme = useTheme();\n    const [activeIndex, setIndex] = useState(null);\n    const [value, setValue] = React.useState(0);\n    const onPieEnter = (data, index) =>{\n        setIndex(index)\n    }\n    \n    const onPieExit = (data, index) =>{\n       setIndex(null)\n    }\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    \n    const handleChangeIndex = (index) => {\n      setValue(index);\n    };\n    \n \n    return (\n      <div>\n        <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\" Labs Capacity\" {...a11yProps(0)} />\n          <Tab label=\"Labs Backlogs\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <div style={{ width: '100%', height: 300}}>\n        <ResponsiveContainer>\n          <PieChart >\n            <Pie\n              dataKey=\"capacity\"\n              activeIndex={activeIndex}\n              activeShape={renderActiveShape} \n              data={props.data} \n              outerRadius={80}\n              fill=\"#ff5533\"\n              onMouseEnter={onPieEnter}\n              onMouseLeave={onPieExit}>\n                {\n                props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS1[index % COLORS1.length]} />)\n                }\n            </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n        </div>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <div style={{ width: '100%', height: 300}}>\n            <ResponsiveContainer>\n            <BarChart\n              data={props.data}\n              margin={{\n                top: 20, right: 30, left: 20, bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"currentCapacity\" stackId=\"a\" fill=\"#5893d8\" maxBarSize={50}/>\n              <Bar dataKey=\"backlog\" stackId=\"a\" fill=\"#5fd4a8\" maxBarSize={50}/>\n            </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </TabPanel>\n        \n       </div>\n    );\n}\n\nexport default LabChart;","/home/hemant/Desktop/STL_Frontend/my-app/src/components/LinearGradient.jsx",[],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/donut.jsx",["54"],"import React, { useState } from 'react';\nimport { PieChart, Pie, Sector, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill='#578975'\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill='#479035'\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${value} Labs`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\n\nfunction LevelPieChart(props) {\n\n  const [activeIndex, setIndex] = useState(0);\n\n  const onPieEnter = (data, index) => {\n    setIndex(index)\n  }\n\n  const onPieExit = (data, index) => {\n    setIndex(0)\n  }\n\n  return (\n    <div style={{width:\"100%\", height:300}}>\n      <ResponsiveContainer>\n        <PieChart >\n          <Pie\n            activeIndex={activeIndex}\n            activeShape={renderActiveShape}\n            data={props.data}\n            innerRadius={60}\n            outerRadius={80}\n            fill='#5893d8'\n            dataKey=\"value\"\n            onMouseEnter={onPieEnter}\n            onMouseLeave={onPieExit}\n          />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\nexport default LevelPieChart;","/home/hemant/Desktop/STL_Frontend/my-app/src/components/table.jsx",["55","56","57","58","59","60","61","62","63"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { DataGrid } from '@material-ui/data-grid';\n\n\nconst columns1 = [\n  {field:\"id\", headerName:\"District Id\", headerAlign: 'center', width:200},\n  {field:\"district_name\", headerName:\"District Name\", headerAlign: 'center', width:200},\n  {field:\"lat\", headerName:\"Latitude\", headerAlign: 'center', width:200},\n  {field:\"lon\", headerName:\"Longitude\", headerAlign: 'center', width:200},\n  {field:\"samples\", headerName:\"Samples\", headerAlign: 'center', width:200}\n]\n\nconst columns2 = [\n  {field:\"id\", headerName:\"Id\", headerAlign: 'center', width:200},\n  {field:\"lab_type\", headerName:\"Lab Type\", headerAlign: 'center', width:200},\n  {field:\"lat\", headerName:\"Latitude\", headerAlign: 'center', width:200},\n  {field:\"lon\", headerName:\"Longitude\", headerAlign: 'center', width:200},\n  {field:\"district_id\", headerName:\"District Id\", headerAlign: 'center', width:200},\n  {field:\"capacity\", headerName:\"Capacity\", headerAlign: 'center', width:200},\n  {field:\"backlogs\", headerName:\"Backlogs\", headerAlign: 'center', width:200}\n]\n\nconst columns3 = [\n  {field:\"id\", headerName:\"No.\", headerAlign: 'center', width:200},\n  {field:\"source\", headerName:\"Source\", headerAlign: 'center', width:200},\n  {field:\"destination\", headerName:\"Destination\", headerAlign: 'center', width:200},\n  {field:\"transfer_type\", headerName:\"Transfer Type\", headerAlign: 'center', width:200},\n  {field:\"samples_transferred\", headerName:\"Samples Transferred\", headerAlign: 'center', width:200}\n]\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <>\n          {children}\n        </>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n}));\n\nexport default function Table(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  console.log(props)\n  let rows1 = []\n  let cols1 = []\n  let rows2 = []\n  let cols2 = []\n  let rows3 = []\n  let cols3 = []\n  if(props.data !== undefined){\n    for(var i = 0; i < props.data[0].length; i++){\n      rows1.push({\n        \"id\":props.data[0].district_id[i],\n        \"district_name\":props.data[0].district_name[i],\n        \"lat\":props.data[0].lat[i],\n        \"lon\":props.data[0].lon[i],\n        \"samples\":props.data[0].samples[i]\n      })\n    }\n\n    for(var i = 0; i < props.data[1].length; i++){\n      \n      rows2.push({\n        \"id\":props.data[1].id[i],\n        \"lab_type\":props.data[1].lab_type[i]===0?\"public\":\"private\",\n        \"lat\":props.data[1].lat[i],\n        \"lon\":props.data[1].lon[i],\n        \"district_id\":props.data[0].district_name[props.data[1].district_id[i]-1],\n        \"capacity\":props.data[1].capacity[i],\n        \"backlogs\":props.data[1].backlogs[i]\n      })\n    }\n\n    for(var i = 0; i < props.data[2].length; i++){\n      rows3.push({\n        \"id\":i+1,\n        \"source\":props.data[0].district_name[props.data[2].source[i]-1],\n        \"destination\":props.data[2].destination[i],\n        \"transfer_type\":props.data[2].transfer_type[i],\n        \"samples_transferred\":props.data[2].samples_transferred[i]\n    })\n  }\n}\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div style={{width:\"100%\"}}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"District Data\" {...a11yProps(0)} />\n          <Tab label=\"Lab Data\" {...a11yProps(1)} />\n          <Tab label=\"Solution Data\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows1} columns={columns1} pageSize={5} />\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows2} columns={columns2} pageSize={5} />\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows3} columns={columns3} pageSize={5} />\n          </div>\n        </TabPanel>\n    </div>\n  );\n}\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":11},{"ruleId":"68","severity":1,"message":"72","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":11},{"ruleId":"68","severity":1,"message":"73","line":61,"column":11,"nodeType":"70","messageId":"71","endLine":61,"endColumn":26},{"ruleId":"68","severity":1,"message":"74","line":69,"column":11,"nodeType":"70","messageId":"71","endLine":69,"endColumn":23},{"ruleId":"68","severity":1,"message":"75","line":94,"column":11,"nodeType":"70","messageId":"71","endLine":94,"endColumn":30},{"ruleId":"68","severity":1,"message":"76","line":67,"column":16,"nodeType":"70","messageId":"71","endLine":67,"endColumn":23},{"ruleId":"68","severity":1,"message":"77","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":20},{"ruleId":"68","severity":1,"message":"78","line":10,"column":11,"nodeType":"70","messageId":"71","endLine":10,"endColumn":18},{"ruleId":"68","severity":1,"message":"79","line":10,"column":20,"nodeType":"70","messageId":"71","endLine":10,"endColumn":27},{"ruleId":"68","severity":1,"message":"80","line":101,"column":11,"nodeType":"70","messageId":"71","endLine":101,"endColumn":28},{"ruleId":"68","severity":1,"message":"81","line":4,"column":7,"nodeType":"70","messageId":"71","endLine":4,"endColumn":11},{"ruleId":"68","severity":1,"message":"82","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":18},{"ruleId":"68","severity":1,"message":"83","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":11},{"ruleId":"68","severity":1,"message":"84","line":79,"column":9,"nodeType":"70","messageId":"71","endLine":79,"endColumn":16},{"ruleId":"68","severity":1,"message":"85","line":84,"column":7,"nodeType":"70","messageId":"71","endLine":84,"endColumn":12},{"ruleId":"68","severity":1,"message":"86","line":86,"column":7,"nodeType":"70","messageId":"71","endLine":86,"endColumn":12},{"ruleId":"68","severity":1,"message":"87","line":88,"column":7,"nodeType":"70","messageId":"71","endLine":88,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":100,"column":13,"nodeType":"70","messageId":"90","endLine":100,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":113,"column":13,"nodeType":"70","messageId":"90","endLine":113,"endColumn":14},{"ruleId":"68","severity":1,"message":"80","line":127,"column":9,"nodeType":"70","messageId":"71","endLine":127,"endColumn":26},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'Pie' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'gradientData' is assigned a value but never used.","'onChangeButtonClick' is assigned a value but never used.","'setData' is assigned a value but never used.","'makeStyles' is defined but never used.","'payload' is assigned a value but never used.","'percent' is assigned a value but never used.","'handleChangeIndex' is assigned a value but never used.","'data' is assigned a value but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'classes' is assigned a value but never used.","'cols1' is assigned a value but never used.","'cols2' is assigned a value but never used.","'cols3' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]