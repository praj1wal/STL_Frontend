[{"/home/hemant/Desktop/STL_Frontend/my-app/src/index.js":"1","/home/hemant/Desktop/STL_Frontend/my-app/src/App.js":"2","/home/hemant/Desktop/STL_Frontend/my-app/src/reportWebVitals.js":"3","/home/hemant/Desktop/STL_Frontend/my-app/src/components/map.jsx":"4","/home/hemant/Desktop/STL_Frontend/my-app/src/components/IndiaMap.jsx":"5","/home/hemant/Desktop/STL_Frontend/my-app/src/components/Pie.jsx":"6"},{"size":500,"mtime":1607267740171,"results":"7","hashOfConfig":"8"},{"size":522,"mtime":1607357039599,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607267740171,"results":"10","hashOfConfig":"8"},{"size":7131,"mtime":1607423195104,"results":"11","hashOfConfig":"8"},{"size":5757,"mtime":1607359123906,"results":"12","hashOfConfig":"8"},{"size":2349,"mtime":1607420907510,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ohlmn0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hemant/Desktop/STL_Frontend/my-app/src/index.js",[],["29","30"],"/home/hemant/Desktop/STL_Frontend/my-app/src/App.js",["31"],"import React from \"react\";\nimport './App.css';\nimport Map from './components/map';\nimport IndiaMap from './components/IndiaMap';\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\nfunction App() {\n  \n  \n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar style={{backgroundColor:\"#ff5533\"}}>\n          Hackathon\n        </Toolbar>\n      </AppBar>\n      <Typography variant=\"h3\">CNI SWABS2LABS HACKATHON</Typography>\n       <IndiaMap />\n    </div>\n  );\n}\n\nexport default App;\n","/home/hemant/Desktop/STL_Frontend/my-app/src/reportWebVitals.js",[],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/map.jsx",["32","33","34","35"],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/IndiaMap.jsx",["36","37","38"],"import React, { useState } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\nimport {Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText, Button} from '@material-ui/core';\nimport Map from './map';\nimport Pie from './Pie';\n    \n  const PROJECTION_CONFIG = {\n    scale: 1000,\n    center: [78.9629, 10.5937]\n  };\n  \n\n  \nconst INDIA_TOPO_JSON = require('./indiaState.topo.json');\nconst getHeatMapData = () => {\n    var data = []\n    for(var i = 0; i < INDIA_TOPO_JSON.objects.IND_adm1.geometries.length; i++){\n        \n        let curr = {\n            ID:INDIA_TOPO_JSON.objects.IND_adm1.geometries[i].properties.ID_1,\n            NAME: INDIA_TOPO_JSON.objects.IND_adm1.geometries[i].properties.NAME_1,\n            value: i*10,\n        }\n        data.push(curr)\n    }\n    //console.log(\"This is data\",data)\n    return data\n};\n\n  const COLOR_RANGE = [\n    '#ffedea',\n    '#ffcec5',\n    '#ffad9f',\n    '#ff8a75',\n    '#ff5533',\n    '#e2492d',\n    '#be3d26',\n    '#9a311f',\n    '#782618'\n  ];\n  \n  const DEFAULT_COLOR = '#EEE';\n\n  const geographyStyle = {\n    default: {\n      outline: 'none'\n    },\n    hover: {\n      fill: '#ccc',\n      transition: 'all 250ms',\n      outline: 'none'\n    },\n    pressed: {\n      outline: 'none'\n    }\n  };\n \n\n  const MapChart = () => {\n      //console.log(INDIA_TOPO_JSON)\n    const [tooltipContent, setTooltipContent] = useState('');\n    const [data, setData] = useState(getHeatMapData());\n\n    const [open, setOpen] = React.useState(false);\n    const [variable,setVariable]=useState(false);\n    const [pass,setPass]=useState('');\n    const [state, setFiles] = React.useState({file1:\"\", file2:\"\", file3:\"\"});\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const gradientData = {\n      fromColor: COLOR_RANGE[0],\n      toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\n      min: 0,\n      max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\n    };\n  \n    const colorScale = scaleQuantile()\n      .domain(data.map(d => d.value))\n      .range(COLOR_RANGE);\n  \n    const onMouseEnter = (geo, current = { value: 'NA' }) => {\n      return () => {\n          //console.log(geo)\n        setTooltipContent(`${geo.properties.NAME_1}: ${current.value}`);\n      };\n    };\n  \n    const onClick = (geo)=>{\n        setOpen(true)\n    }\n    const onMouseLeave = () => {\n      setTooltipContent('');\n    };\n  \n    const onChangeButtonClick = () => {\n      setData(getHeatMapData());\n    };\n\n    \n    const handleFileChange = (event) => {\n        setFiles({...state, [event.target.name] : event.target.files[0]})\n      };\n    \n    const onSubmit = (event) =>{\n        event.preventDefault()\n        const data = new FormData()\n        console.log(state)\n        data.append(\"file1\",state.file1)\n        data.append(\"file2\",state.file2)\n        data.append(\"file3\",state.file3)\n            axios\n                .post(\n                        \"/\",\n                data\n                        ,\n                    {\n                headers: {\n                \"Content-Type\":\"multipart/form-data\"\n                }\n                }\n                )\n            .then(res => {\n                console.log(res.data);\n                setPass(res.data);\n                setVariable(true);\n                setOpen(false)\n            })\n            .catch(err =>{\n                console.log(err)\n                setOpen(false)\n            })\n    }\n\n  return (\n    <>\n    {variable === false && <div><ReactTooltip>{tooltipContent}</ReactTooltip>\n    <ComposableMap\n        projectionConfig={PROJECTION_CONFIG}\n        projection=\"geoMercator\"\n        width={1000}\n        height={1000}\n        data-tip=\"\"\n    >\n        <Geographies geography={INDIA_TOPO_JSON}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              const current = data.find(s => s.ID === geo.properties.ID_1);\n              // console.log(\"This is geo\",geo);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n                  style={geographyStyle}\n                  onMouseEnter={onMouseEnter(geo, current)}\n                  onMouseLeave={onMouseLeave}\n                  onClick={()=>{onClick(geo)}}\n                />\n              );\n            })\n          }\n        </Geographies>\n    </ComposableMap>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Upload data</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Supported file extensions : xlsx and csv.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <form onSubmit={onSubmit}>\n                <input type=\"file\" name=\"file1\"  onChange= {handleFileChange}/><br/>\n                <input type=\"file\" name=\"file2\"  onChange= {handleFileChange}/><br/>\n                <input type=\"file\" name=\"file3\"  onChange= {handleFileChange}/><br/>\n                <Button type=\"submit\" color=\"primary\">Submit File</Button>\n            </form>\n            <Button onClick={handleClose} color=\"primary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n    <div className=\"center\">\n        <button className=\"mt16\" onClick={onChangeButtonClick}>Change</button>\n    </div>\n    </div>\n  }\n  {variable===true &&(\n    <div>\n      <Map datum={pass}/>\n    </div>\n  )}\n</>\n  );\n};\n\nexport default MapChart;\n","/home/hemant/Desktop/STL_Frontend/my-app/src/components/Pie.jsx",["39","40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":11},{"ruleId":"46","severity":1,"message":"50","line":14,"column":7,"nodeType":"48","messageId":"49","endLine":14,"endColumn":28},{"ruleId":"46","severity":1,"message":"51","line":17,"column":7,"nodeType":"48","messageId":"49","endLine":17,"endColumn":16},{"ruleId":"46","severity":1,"message":"52","line":111,"column":11,"nodeType":"48","messageId":"49","endLine":111,"endColumn":23},{"ruleId":"53","severity":1,"message":"54","line":159,"column":15,"nodeType":"48","messageId":"55","endLine":159,"endColumn":16},{"ruleId":"46","severity":1,"message":"56","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":11},{"ruleId":"46","severity":1,"message":"57","line":72,"column":11,"nodeType":"48","messageId":"49","endLine":72,"endColumn":26},{"ruleId":"46","severity":1,"message":"52","line":80,"column":11,"nodeType":"48","messageId":"49","endLine":80,"endColumn":23},{"ruleId":"46","severity":1,"message":"58","line":3,"column":7,"nodeType":"48","messageId":"49","endLine":3,"endColumn":16},{"ruleId":"46","severity":1,"message":"59","line":9,"column":11,"nodeType":"48","messageId":"49","endLine":9,"endColumn":18},{"ruleId":"46","severity":1,"message":"60","line":9,"column":20,"nodeType":"48","messageId":"49","endLine":9,"endColumn":27},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'MAHARASHTRA_TOPO_JSON' is assigned a value but never used.","'dicionary' is assigned a value but never used.","'gradientData' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'Pie' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'dummydata' is assigned a value but never used.","'payload' is assigned a value but never used.","'percent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]