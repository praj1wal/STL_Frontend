[{"/home/hemant/Desktop/STL_Frontend/my-app/src/index.js":"1","/home/hemant/Desktop/STL_Frontend/my-app/src/reportWebVitals.js":"2","/home/hemant/Desktop/STL_Frontend/my-app/src/App.js":"3","/home/hemant/Desktop/STL_Frontend/my-app/src/components/IndiaMap.jsx":"4","/home/hemant/Desktop/STL_Frontend/my-app/src/components/map.jsx":"5","/home/hemant/Desktop/STL_Frontend/my-app/src/components/Pie.jsx":"6","/home/hemant/Desktop/STL_Frontend/my-app/src/components/donut.jsx":"7","/home/hemant/Desktop/STL_Frontend/my-app/src/components/LinearGradient.jsx":"8","/home/hemant/Desktop/STL_Frontend/my-app/src/components/table.jsx":"9"},{"size":500,"mtime":1607267740171,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607267740171,"results":"12","hashOfConfig":"11"},{"size":241,"mtime":1607608140321,"results":"13","hashOfConfig":"11"},{"size":6608,"mtime":1608190801864,"results":"14","hashOfConfig":"11"},{"size":8858,"mtime":1608201513121,"results":"15","hashOfConfig":"11"},{"size":5016,"mtime":1607592996017,"results":"16","hashOfConfig":"11"},{"size":2546,"mtime":1607538876298,"results":"17","hashOfConfig":"11"},{"size":715,"mtime":1607608575631,"results":"18","hashOfConfig":"11"},{"size":5333,"mtime":1607584584960,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ohlmn0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/home/hemant/Desktop/STL_Frontend/my-app/src/index.js",[],["44","45"],"/home/hemant/Desktop/STL_Frontend/my-app/src/reportWebVitals.js",[],"/home/hemant/Desktop/STL_Frontend/my-app/src/App.js",["46"],"import React from \"react\";\nimport './App.css';\nimport Map from './components/map';\nimport IndiaMap from './components/IndiaMap';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IndiaMap />\n    </div>\n  );\n}\n\nexport default App;\n","/home/hemant/Desktop/STL_Frontend/my-app/src/components/IndiaMap.jsx",["47","48","49","50"],"import React, { useState } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\nimport {Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText, Button, Typography, Divider ,AppBar, Toolbar} from '@material-ui/core';\nimport Map from './map';\nimport Pie from './Pie';\nimport './background.css'\n  const PROJECTION_CONFIG = {\n    scale: 1000,\n    center: [80.9629, 20]\n  };\n  \n\n  \nconst INDIA_TOPO_JSON = require('./IndiaState.topo.json');\nconst getHeatMapData = () => {\n    var data = []\n    for(var i = 0; i < INDIA_TOPO_JSON.objects.ne_10m_admin_1_India_Official.geometries.length; i++){\n        \n        let curr = {\n            name: INDIA_TOPO_JSON.objects.ne_10m_admin_1_India_Official.geometries[i].properties.name,\n            value: INDIA_TOPO_JSON.objects.ne_10m_admin_1_India_Official.geometries[i].properties.population,\n        }\n        data.push(curr)\n    }\n    return data\n};\n\n  \n  const COLOR_RANGE = ['#eedc9b','#dcf483','#8ee677', '#5fd4a8','#53bbc9', '#5893d8']\n  \n  const DEFAULT_COLOR = '#EEE';\n\n  const geographyStyle = {\n    default: {\n      outline: 'none'\n    },\n    hover: {\n      fill: '#ccc',\n      transition: 'all 250ms',\n      outline: 'none'\n    },\n    pressed: {\n      outline: 'none'\n    }\n  };\n \n\n  const MapChart = () => {\n      //console.log(INDIA_TOPO_JSON)\n    const [tooltipContent, setTooltipContent] = useState('');\n    const [data, setData] = useState(getHeatMapData());\n    const [area, setArea] = useState(\"\")\n    const [open, setOpen] = React.useState(false);\n    const [variable,setVariable]=useState(false);\n    const [pass,setPass]=useState('');\n    const [state, setFiles] = React.useState({file1:\"\", file2:\"\", file3:\"\"});\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const gradientData = {\n      fromColor: COLOR_RANGE[0],\n      toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\n      min: 0,\n      max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\n    };\n  \n    const colorScale = scaleQuantile()\n      .domain(data.map(d => d.value))\n      .range(COLOR_RANGE);\n  \n    const onMouseEnter = (geo, current = { value: 'NA' }) => {\n      return () => {\n        setTooltipContent(`${geo.properties.name}`);\n      };\n    };\n  \n    const onClick = (curr)=>{\n        setArea(curr.name.toLowerCase())\n        setOpen(true)\n    }\n    const onMouseLeave = () => {\n      setTooltipContent('');\n    };\n  \n    const onChangeButtonClick = () => {\n      setData(getHeatMapData());\n    };\n\n    \n    const handleFileChange = (event) => {\n        setFiles({...state, [event.target.name] : event.target.files[0]})\n      };\n    \n    const onSubmit = (event) =>{\n        event.preventDefault()\n        const data = new FormData()\n        console.log(state)\n        data.append(\"file1\",state.file1)\n        data.append(\"file2\",state.file2)\n        data.append(\"file3\",state.file3)\n            axios\n                .post(\n                        \"https://cni-backend.herokuapp.com/\",\n                data\n                        ,\n                    {\n                headers: {\n                \"Content-Type\":\"multipart/form-data\"\n                }\n                }\n                )\n            .then(res => {\n                console.log(res.data);\n                setPass(res.data);\n                setVariable(true);\n                setOpen(false)\n            })\n            .catch(err =>{\n                console.log(err)\n                setOpen(false)\n            })\n    }\n\n    const handleHomeClick = () => {\n      setVariable(false)\n    }\n  return (\n    <>\n    <AppBar position=\"static\">\n        <Toolbar style={{backgroundColor:\"#141e30\"}}>\n          <Button onClick={handleHomeClick} style={{color:\"white\"}}>Home</Button>\n        </Toolbar>\n      </AppBar>\n    {variable === false && \n\n    <div className=\"divBack\" >\n        <div style={{paddingTop:\"2%\", paddingBottom:\"5%\", color:\"white\"}}>\n        <center><Typography variant=\"h4\" >CNI Hackathon 2020</Typography><br/>\n          <Divider style={{ width:\"5%\", height:2, backgroundColor:\"white\"}} variant=\"middle\"/><br/>\n          <Typography component=\"p\">\n            Please click on the state of your choice and upload district, lab and transfer data of that state.\n          </Typography></center>\n        </div>\n    \n    <ReactTooltip>{tooltipContent}</ReactTooltip>\n    <ComposableMap\n        projectionConfig={PROJECTION_CONFIG}\n        projection=\"geoMercator\"\n        width={1000}\n        height={700}\n        data-tip=\"\"\n    >\n        <Geographies geography={INDIA_TOPO_JSON}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              const current = data.find(s => s.name.toUpperCase() === geo.properties.name.toUpperCase());\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n                  style={geographyStyle}\n                  onMouseEnter={onMouseEnter(geo, current)}\n                  onMouseLeave={onMouseLeave}\n                  onClick={()=>{onClick(current)}}\n                />\n              );\n            })\n          }\n        </Geographies>\n    </ComposableMap>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" >\n        <DialogTitle id=\"form-dialog-title\">Upload data</DialogTitle>\n        <form onSubmit={onSubmit}>\n        <DialogContent>\n            <DialogContentText>\n                Supported file extensions : xlsx and csv.\n            </DialogContentText>\n                <label>District Data:</label><br/>\n                <input type=\"file\" name=\"file1\"  onChange= {handleFileChange}/><br/><br/>\n                <label>Lab Data:</label><br/>\n                <input type=\"file\" name=\"file2\"  onChange= {handleFileChange}/><br/><br/>\n                <label>Transfer Data:</label><br/>\n                <input type=\"file\" name=\"file3\"  onChange= {handleFileChange}/><br/><br/>\n            \n        </DialogContent>\n        <DialogActions>\n            <Button type=\"submit\" color=\"primary\">Submit File</Button>\n            <Button onClick={handleClose} color=\"primary\">\n                Cancel\n            </Button>\n        </DialogActions>\n        </form>\n    </Dialog>\n    </div>\n  }\n  {variable===true &&(\n    <div>\n      <Map datum={pass} area={area}/>\n    </div>\n  )}\n</>\n  );\n};\n\nexport default MapChart;\n","/home/hemant/Desktop/STL_Frontend/my-app/src/components/map.jsx",["51","52","53"],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/Pie.jsx",["54","55","56","57"],"import React, { useState } from 'react';\nimport {PieChart, Pie, Sector, ResponsiveContainer, Cell, BarChart, Bar,XAxis, YAxis, CartesianGrid, Tooltip, Legend,} from 'recharts';\nimport {AppBar, Tabs, Tab} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nconst COLORS1 = ['#5893d8', '#53bbc9', '#5fd4a8', '#8ee677', '#dcf483', '#eedc9b', '#0d47a1', '#90caf9'];\nconst renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value,name } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius+15}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 21}\n        outerRadius={outerRadius + 25}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\" style={{fontSize:12}}>{`Capacity ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#666\">\n        {`Lab ${name}`}\n      </text>\n    </g>\n  );\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <>\n          {children}\n        </>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\n\nfunction LabChart(props){\n    const theme = useTheme();\n    const [activeIndex, setIndex] = useState(null);\n    const [value, setValue] = React.useState(0);\n    const onPieEnter = (data, index) =>{\n        setIndex(index)\n    }\n    \n    const onPieExit = (data, index) =>{\n       setIndex(null)\n    }\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    \n    const handleChangeIndex = (index) => {\n      setValue(index);\n    };\n    \n \n    return (\n      <div>\n        <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\" Labs Capacity\" {...a11yProps(0)} />\n          <Tab label=\"Labs Backlogs\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <div style={{ width: '100%', height: 300}}>\n        <ResponsiveContainer>\n          <PieChart >\n            <Pie\n              dataKey=\"capacity\"\n              activeIndex={activeIndex}\n              activeShape={renderActiveShape} \n              data={props.data} \n              outerRadius={80}\n              fill=\"#ff5533\"\n              onMouseEnter={onPieEnter}\n              onMouseLeave={onPieExit}>\n                {\n                props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS1[index % COLORS1.length]} />)\n                }\n            </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n        </div>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <div style={{ width: '100%', height: 300}}>\n            <ResponsiveContainer>\n            <BarChart\n              data={props.data}\n              margin={{\n                top: 20, right: 30, left: 20, bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"currentCapacity\" stackId=\"a\" fill=\"#5893d8\" maxBarSize={50}/>\n              <Bar dataKey=\"backlog\" stackId=\"a\" fill=\"#5fd4a8\" maxBarSize={50}/>\n            </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </TabPanel>\n        \n       </div>\n    );\n}\n\nexport default LabChart;","/home/hemant/Desktop/STL_Frontend/my-app/src/components/donut.jsx",["58"],"import React, { useState } from 'react';\nimport { PieChart, Pie, Sector, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill='#578975'\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill='#479035'\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${value} Labs`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\n\nfunction LevelPieChart(props) {\n\n  const [activeIndex, setIndex] = useState(0);\n\n  const onPieEnter = (data, index) => {\n    setIndex(index)\n  }\n\n  const onPieExit = (data, index) => {\n    setIndex(0)\n  }\n\n  return (\n    <div style={{width:\"100%\", height:300}}>\n      <ResponsiveContainer>\n        <PieChart >\n          <Pie\n            activeIndex={activeIndex}\n            activeShape={renderActiveShape}\n            data={props.data}\n            innerRadius={60}\n            outerRadius={80}\n            fill='#5893d8'\n            dataKey=\"value\"\n            onMouseEnter={onPieEnter}\n            onMouseLeave={onPieExit}\n          />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\nexport default LevelPieChart;","/home/hemant/Desktop/STL_Frontend/my-app/src/components/LinearGradient.jsx",[],"/home/hemant/Desktop/STL_Frontend/my-app/src/components/table.jsx",["59","60","61","62","63","64","65","66","67"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { DataGrid } from '@material-ui/data-grid';\n\n\nconst columns1 = [\n  {field:\"id\", headerName:\"District Id\", headerAlign: 'center', width:200},\n  {field:\"district_name\", headerName:\"District Name\", headerAlign: 'center', width:200},\n  {field:\"lat\", headerName:\"Latitude\", headerAlign: 'center', width:200},\n  {field:\"lon\", headerName:\"Longitude\", headerAlign: 'center', width:200},\n  {field:\"samples\", headerName:\"Samples\", headerAlign: 'center', width:200}\n]\n\nconst columns2 = [\n  {field:\"id\", headerName:\"Id\", headerAlign: 'center', width:200},\n  {field:\"lab_type\", headerName:\"Lab Type\", headerAlign: 'center', width:200},\n  {field:\"lat\", headerName:\"Latitude\", headerAlign: 'center', width:200},\n  {field:\"lon\", headerName:\"Longitude\", headerAlign: 'center', width:200},\n  {field:\"district_id\", headerName:\"District Id\", headerAlign: 'center', width:200},\n  {field:\"capacity\", headerName:\"Capacity\", headerAlign: 'center', width:200},\n  {field:\"backlogs\", headerName:\"Backlogs\", headerAlign: 'center', width:200}\n]\n\nconst columns3 = [\n  {field:\"id\", headerName:\"No.\", headerAlign: 'center', width:200},\n  {field:\"source\", headerName:\"Source\", headerAlign: 'center', width:200},\n  {field:\"destination\", headerName:\"Destination\", headerAlign: 'center', width:200},\n  {field:\"transfer_type\", headerName:\"Transfer Type\", headerAlign: 'center', width:200},\n  {field:\"samples_transferred\", headerName:\"Samples Transferred\", headerAlign: 'center', width:200}\n]\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <>\n          {children}\n        </>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n}));\n\nexport default function Table(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  console.log(props)\n  let rows1 = []\n  let cols1 = []\n  let rows2 = []\n  let cols2 = []\n  let rows3 = []\n  let cols3 = []\n  if(props.data !== undefined){\n    for(var i = 0; i < props.data[0].length; i++){\n      rows1.push({\n        \"id\":props.data[0].district_id[i],\n        \"district_name\":props.data[0].district_name[i],\n        \"lat\":props.data[0].lat[i],\n        \"lon\":props.data[0].lon[i],\n        \"samples\":props.data[0].samples[i]\n      })\n    }\n\n    for(var i = 0; i < props.data[1].length; i++){\n      \n      rows2.push({\n        \"id\":props.data[1].id[i],\n        \"lab_type\":props.data[1].lab_type[i]===0?\"public\":\"private\",\n        \"lat\":props.data[1].lat[i],\n        \"lon\":props.data[1].lon[i],\n        \"district_id\":props.data[0].district_name[props.data[1].district_id[i]-1],\n        \"capacity\":props.data[1].capacity[i],\n        \"backlogs\":props.data[1].backlogs[i]\n      })\n    }\n\n    for(var i = 0; i < props.data[2].length; i++){\n      rows3.push({\n        \"id\":i+1,\n        \"source\":props.data[0].district_name[props.data[2].source[i]-1],\n        \"destination\":props.data[2].destination[i],\n        \"transfer_type\":props.data[2].transfer_type[i],\n        \"samples_transferred\":props.data[2].samples_transferred[i]\n    })\n  }\n}\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div style={{width:\"100%\"}}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"District Data\" {...a11yProps(0)} />\n          <Tab label=\"Lab Data\" {...a11yProps(1)} />\n          <Tab label=\"Solution Data\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows1} columns={columns1} pageSize={5} />\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows2} columns={columns2} pageSize={5} />\n          </div>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <div style={{ height: 400, width: '100%' }}>\n            <DataGrid rows={rows3} columns={columns3} pageSize={5} />\n          </div>\n        </TabPanel>\n    </div>\n  );\n}\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":11},{"ruleId":"72","severity":1,"message":"76","line":8,"column":8,"nodeType":"74","messageId":"75","endLine":8,"endColumn":11},{"ruleId":"72","severity":1,"message":"77","line":61,"column":11,"nodeType":"74","messageId":"75","endLine":61,"endColumn":26},{"ruleId":"72","severity":1,"message":"78","line":69,"column":11,"nodeType":"74","messageId":"75","endLine":69,"endColumn":23},{"ruleId":"72","severity":1,"message":"79","line":94,"column":11,"nodeType":"74","messageId":"75","endLine":94,"endColumn":30},{"ruleId":"72","severity":1,"message":"80","line":2,"column":78,"nodeType":"74","messageId":"75","endLine":2,"endColumn":88},{"ruleId":"72","severity":1,"message":"81","line":10,"column":8,"nodeType":"74","messageId":"75","endLine":10,"endColumn":18},{"ruleId":"72","severity":1,"message":"82","line":68,"column":16,"nodeType":"74","messageId":"75","endLine":68,"endColumn":23},{"ruleId":"72","severity":1,"message":"83","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":20},{"ruleId":"72","severity":1,"message":"84","line":10,"column":11,"nodeType":"74","messageId":"75","endLine":10,"endColumn":18},{"ruleId":"72","severity":1,"message":"85","line":10,"column":20,"nodeType":"74","messageId":"75","endLine":10,"endColumn":27},{"ruleId":"72","severity":1,"message":"86","line":101,"column":11,"nodeType":"74","messageId":"75","endLine":101,"endColumn":28},{"ruleId":"72","severity":1,"message":"87","line":4,"column":7,"nodeType":"74","messageId":"75","endLine":4,"endColumn":11},{"ruleId":"72","severity":1,"message":"88","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":18},{"ruleId":"72","severity":1,"message":"89","line":8,"column":8,"nodeType":"74","messageId":"75","endLine":8,"endColumn":11},{"ruleId":"72","severity":1,"message":"90","line":79,"column":9,"nodeType":"74","messageId":"75","endLine":79,"endColumn":16},{"ruleId":"72","severity":1,"message":"91","line":84,"column":7,"nodeType":"74","messageId":"75","endLine":84,"endColumn":12},{"ruleId":"72","severity":1,"message":"92","line":86,"column":7,"nodeType":"74","messageId":"75","endLine":86,"endColumn":12},{"ruleId":"72","severity":1,"message":"93","line":88,"column":7,"nodeType":"74","messageId":"75","endLine":88,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":100,"column":13,"nodeType":"74","messageId":"96","endLine":100,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":113,"column":13,"nodeType":"74","messageId":"96","endLine":113,"endColumn":14},{"ruleId":"72","severity":1,"message":"86","line":127,"column":9,"nodeType":"74","messageId":"75","endLine":127,"endColumn":26},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'Pie' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'gradientData' is assigned a value but never used.","'onChangeButtonClick' is assigned a value but never used.","'Annotation' is defined but never used.","'DeleteIcon' is defined but never used.","'setData' is assigned a value but never used.","'makeStyles' is defined but never used.","'payload' is assigned a value but never used.","'percent' is assigned a value but never used.","'handleChangeIndex' is assigned a value but never used.","'data' is assigned a value but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'classes' is assigned a value but never used.","'cols1' is assigned a value but never used.","'cols2' is assigned a value but never used.","'cols3' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]